<?php
require_once 'includes/config.php';
require_once 'includes/functions.php';

$errors = [];
$formData = [
    'username' => '',
    'first_name' => '',
    'last_name' => '',
    'email' => '',
    'phone' => ''
];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $formData['username'] = trim($_POST['username']);
    $formData['first_name'] = trim($_POST['first_name']);
    $formData['last_name'] = trim($_POST['last_name']);
    $formData['email'] = trim($_POST['email']);
    $formData['phone'] = trim($_POST['phone']); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
    $password = $_POST['password'];
    $password_confirm = $_POST['password_confirm'];
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (empty($formData['username'])) {
        $errors['username'] = "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } elseif (strlen($formData['username']) < 4) {
        $errors['username'] = "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞";
    } else {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = ?");
        $stmt->execute([$formData['username']]);
        if ($stmt->fetch()) {
            $errors['username'] = "–≠—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∑–∞–Ω—è—Ç–æ";
        }
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
    if (empty($formData['first_name'])) {
        $errors['first_name'] = "–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } elseif (strlen($formData['first_name']) < 2) {
        $errors['first_name'] = "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞";
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–º–∏–ª–∏–∏
    if (empty($formData['last_name'])) {
        $errors['last_name'] = "–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } elseif (strlen($formData['last_name']) < 2) {
        $errors['last_name'] = "–§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞";
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (empty($formData['email'])) {
        $errors['email'] = "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } elseif (!filter_var($formData['email'], FILTER_VALIDATE_EMAIL)) {
        $errors['email'] = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email";
    } else {
        $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
        $stmt->execute([$formData['email']]);
        if ($stmt->fetch()) {
            $errors['email'] = "–≠—Ç–æ—Ç email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è";
        }
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
    if (!empty($formData['phone'])) {
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
        $cleanedPhone = preg_replace('/[^0-9]/', '', $formData['phone']);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 —Ü–∏—Ñ—Ä)
        if (strlen($cleanedPhone) < 10) {
            $errors['phone'] = "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Ü–∏—Ñ—Ä";
        } else {
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ
            $formData['phone'] = $cleanedPhone;
        }
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
    if (empty($password)) {
        $errors['password'] = "–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else {
        if (strlen($password) < 10) {
            $errors['password'] = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤";
        } elseif (!preg_match('/[A-Za-z]/', $password)) {
            $errors['password'] = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±—É–∫–≤—É";
        } elseif (!preg_match('/[0-9]/', $password)) {
            $errors['password'] = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É";
        } elseif ($password !== $password_confirm) {
            $errors['password_confirm'] = "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç";
        }
    }
    
    // –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (empty($errors)) {
        if (register_user($formData['username'], $formData['first_name'], $formData['last_name'], $formData['email'], $password, 'user', $pdo, $formData['phone'])) {
            $_SESSION['success_message'] = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.";
            redirect('login.php');
        } else {
            $errors[] = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
        }
    }
}

$pageTitle = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è | " . SITE_NAME;
require_once 'includes/header.php';
?>

<div class="auth-card">
    <div class="auth-header">
        <h2>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h2>
        <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É</p>
    </div>
    
    <?php if (!empty($errors)): ?>
        <div class="alert error">
            <ul>
                <?php foreach ($errors as $error): ?>
                    <li><?php echo $error; ?></li>
                <?php endforeach; ?>
            </ul>
        </div>
    <?php endif; ?>
    
    <form method="post" action="register.php" id="registerForm">
        <div class="form-group">
            <label for="username" class="form-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
            <input type="text" id="username" name="username" 
                   class="form-control" 
                   value="<?php echo htmlspecialchars($formData['username']); ?>"
                   placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω">
            <?php if (isset($errors['username'])): ?>
                <div class="error-message"><?php echo $errors['username']; ?></div>
            <?php endif; ?>
        </div>
        
        <div class="form-row">
            <div class="form-group">
                <label for="first_name" class="form-label">–ò–º—è</label>
                <input type="text" id="first_name" name="first_name" 
                       class="form-control" 
                       value="<?php echo htmlspecialchars($formData['first_name']); ?>"
                       placeholder="–í–∞—à–µ –∏–º—è">
                <?php if (isset($errors['first_name'])): ?>
                    <div class="error-message"><?php echo $errors['first_name']; ?></div>
                <?php endif; ?>
            </div>
            
            <div class="form-group">
                <label for="last_name" class="form-label">–§–∞–º–∏–ª–∏—è</label>
                <input type="text" id="last_name" name="last_name" 
                       class="form-control" 
                       value="<?php echo htmlspecialchars($formData['last_name']); ?>"
                       placeholder="–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è">
                <?php if (isset($errors['last_name'])): ?>
                    <div class="error-message"><?php echo $errors['last_name']; ?></div>
                <?php endif; ?>
            </div>
        </div>
        
        <div class="form-group">
            <label for="email" class="form-label">Email</label>
            <input type="email" id="email" name="email" 
                   class="form-control" 
                   value="<?php echo htmlspecialchars($formData['email']); ?>"
                   placeholder="–í–∞—à email">
            <?php if (isset($errors['email'])): ?>
                <div class="error-message"><?php echo $errors['email']; ?></div>
            <?php endif; ?>
        </div>
        
        <div class="form-group">
            <label for="phone" class="form-label">–¢–µ–ª–µ—Ñ–æ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
            <input type="tel" id="phone" name="phone" 
                   class="form-control" 
                   value="<?php echo htmlspecialchars($formData['phone']); ?>"
                   placeholder="+7 (XXX) XXX-XX-XX">
            <?php if (isset($errors['phone'])): ?>
                <div class="error-message"><?php echo $errors['phone']; ?></div>
            <?php endif; ?>
        </div>
        
        <div class="form-group">
            <label for="password" class="form-label">–ü–∞—Ä–æ–ª—å</label>
            <div class="password-wrapper">
                <input type="password" id="password" name="password" 
                       class="form-control" 
                       placeholder="–ù–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤, –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã">
                <button type="button" class="toggle-password" data-target="password">üëÅÔ∏è</button>
            </div>
            <?php if (isset($errors['password'])): ?>
                <div class="error-message"><?php echo $errors['password']; ?></div>
            <?php endif; ?>
            <div class="password-strength">
                <div class="strength-meter">
                    <div class="strength-bar" id="strengthBar"></div>
                </div>
                <div class="strength-feedback">
                    <span class="feedback-text">–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è:</span>
                    <span class="strength-text" id="strengthText">–ù–µ–Ω–∞–¥—ë–∂–Ω—ã–π</span>
                </div>
            </div>
            <div class="requirements-list">
                <div class="requirement" id="lengthReq">
                    <span class="icon">‚úñ</span> –ù–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤
                </div>
                <div class="requirement" id="letterReq">
                    <span class="icon">‚úñ</span> –•–æ—Ç—è –±—ã –æ–¥–Ω–∞ –±—É–∫–≤–∞ (–∞–Ω–≥–ª. –∏–ª–∏ —Ä—É—Å.)
                </div>
                <div class="requirement" id="numberReq">
                    <span class="icon">‚úñ</span> –•–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <label for="password_confirm" class="form-label">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
            <div class="password-wrapper">
                <input type="password" id="password_confirm" name="password_confirm" 
                       class="form-control" 
                       placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å">
                <button type="button" class="toggle-password" data-target="password_confirm">üëÅÔ∏è</button>
            </div>
            <?php if (isset($errors['password_confirm'])): ?>
                <div class="error-message"><?php echo $errors['password_confirm']; ?></div>
            <?php endif; ?>
        </div>
        
        <button type="submit" class="btn btn-block">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
    </form>
    
    <div class="auth-footer">
        –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="login.php">–í–æ–π—Ç–∏</a>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å
    document.querySelectorAll('.toggle-password').forEach(button => {
        button.addEventListener('click', function() {
            const targetId = this.getAttribute('data-target');
            const input = document.getElementById(targetId);
            const isPassword = input.type === 'password';
            
            input.type = isPassword ? 'text' : 'password';
            this.textContent = isPassword ? 'üôà' : 'üëÅÔ∏è';
        });
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const passwordInput = document.getElementById('password');
    const strengthBar = document.getElementById('strengthBar');
    const strengthText = document.getElementById('strengthText');
    const lengthReq = document.getElementById('lengthReq');
    const letterReq = document.getElementById('letterReq');
    const numberReq = document.getElementById('numberReq');
    
    passwordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
        const hasLength = password.length >= 10;
        updateRequirement(lengthReq, hasLength);
        if (hasLength) strength += 1;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–∫–≤ (—Ç–µ–ø–µ—Ä—å –∏ —Ä—É—Å—Å–∫–∏–µ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ)
        const hasLetter = /[A-Za-z–ê-–Ø–∞-—è]/.test(password);
        updateRequirement(letterReq, hasLetter);
        if (hasLetter) strength += 1;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏—Ñ—Ä
        const hasNumber = /[0-9]/.test(password);
        updateRequirement(numberReq, hasNumber);
        if (hasNumber) strength += 1;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å–∏–ª—ã
        updateStrengthIndicator(strength);
    });
    
    // –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneInput = document.getElementById('phone');
    if (phoneInput) {
        phoneInput.addEventListener('input', function(e) {
            const x = this.value.replace(/\D/g, '').match(/(\d{0,1})(\d{0,3})(\d{0,3})(\d{0,2})(\d{0,2})/);
            this.value = !x[2] ? x[1] : '+' + x[1] + ' (' + x[2] + (x[3] ? ') ' + x[3] : '') + (x[4] ? '-' + x[4] : '') + (x[5] ? '-' + x[5] : '');
        });
    }
    
    function updateRequirement(element, isValid) {
        const icon = element.querySelector('.icon');
        if (isValid) {
            element.classList.add('valid');
            icon.textContent = '‚úî';
            icon.style.color = '#1cc88a';
        } else {
            element.classList.remove('valid');
            icon.textContent = '‚úñ';
            icon.style.color = '#e74a3b';
        }
    }
    
    function updateStrengthIndicator(strength) {
        let percent = 0;
        let text = '';
        let color = '';
        
        switch(strength) {
            case 0:
                percent = 0;
                text = '–ù–µ–Ω–∞–¥—ë–∂–Ω—ã–π';
                color = '#e74a3b';
                break;
            case 1:
                percent = 33;
                text = '–°–ª–∞–±—ã–π';
                color = '#f6c23e';
                break;
            case 2:
                percent = 66;
                text = '–°—Ä–µ–¥–Ω–∏–π';
                color = '#4e73df';
                break;
            case 3:
                percent = 100;
                text = '–ù–∞–¥—ë–∂–Ω—ã–π';
                color = '#1cc88a';
                break;
        }
        
        strengthBar.style.width = percent + '%';
        strengthBar.style.backgroundColor = color;
        strengthText.textContent = text;
        strengthText.style.color = color;
    }
});
</script>

<?php
require_once 'includes/footer.php';
?>